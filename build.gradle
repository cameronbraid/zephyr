plugins {
    id 'pmd'
    id 'maven-publish'
    id "com.diffplug.spotless" version "5.8.2"
    id "com.github.spotbugs" version "4.6.0"
    id "org.springframework.boot" version "2.2.4.RELEASE" apply false
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.diffplug.eclipse.apt" version "3.32.2"
}

apply from: "$rootDir/tasks/revisions.gradle"


allprojects {
    apply plugin: 'idea'
    apply plugin: "com.diffplug.spotless"
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'eclipse'
    apply plugin: "com.diffplug.eclipse.apt"
    dependencyManagement {
        imports {
            mavenBom "io.zephyr:bom-imported:$project.version"
        }
    }


    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://repository.mulesoft.org/nexus/content/repositories/public/"
        }
    }

    pluginManager.withPlugin('java') {
      eclipse {
        synchronizationTasks eclipseJdtApt, eclipseJdt, eclipseFactorypath

        jdt {
          file {
            withProperties { props ->
              props.setProperty "org.eclipse.jdt.core.circularClasspath", "warning"
            }
          }
        }
      }
    }


}

subprojects {

    apply plugin: 'maven-publish'
    publishing {
        repositories {
            maven {
                credentials {
                    username "$mavenRepositoryUsername"
                    password "$mavenRepositoryPassword"
                }
                url "$mavenRepositoryUrl"
            }
        }
    }


    plugins.withType(WarPlugin) {
        configurations {
            plugin {
                transitive = false
                extendsFrom implementation
            }
        }


//        tasks.withType(com.github.spotbugs.SpotBugsTask) {
//            reports {
//                xml.enabled = false
//                html.enabled = true
//            }
//        }
        pmd {
            toolVersion = '6.30.0'
            ruleSets = [
                    "${project.rootDir}/check/pmd/rules/errorprone.xml",
                    "category/java/multithreading.xml",
                    "category/java/bestpractices.xml",
                    "category/java/performance.xml"
            ]

        }

        publishing {
            publications {
                pluginMaven(MavenPublication) {
                    from components.web
                }
            }
        }
    }


    plugins.withType(JavaPlugin) {


        task packageJavadocs(type: Jar, dependsOn: 'javadoc') {
            classifier 'javadoc'
            version project.version
            from javadoc.destinationDir
        }

        task sourceJar(type: Jar) {
            from sourceSets.main.allJava
        }


        javadoc {
            source = sourceSets.main.allJava
            classpath += configurations.runtimeClasspath
            options.addBooleanOption('html5', true)
        }


        publishing {
            publications {

                pluginMaven(MavenPublication) {
                    artifact tasks.jar
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                }

                pluginMaven(MavenPublication) {
                    artifact(tasks.packageJavadocs) {
                        classifier = 'javadocs'
                    }
                    artifact sourceJar {
                        classifier "sources"
                    }
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                }
            }
        }


        tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
            reports {
                xml.enabled = false
                html.enabled = true
            }
        }
        pmd {
            toolVersion = '6.30.0'
            ruleSets = [
                    "${project.rootDir}/check/pmd/rules/errorprone.xml",
                    "category/java/multithreading.xml",
                    "category/java/bestpractices.xml",
                    "category/java/performance.xml"
            ]

        }

        test {
            useJUnitPlatform()
        }
        spotless {
            java {
                googleJavaFormat('1.9')
            }
        }

        dependencies {
            compileOnly 'org.projectlombok:lombok'
            testCompileOnly 'org.projectlombok:lombok'
            annotationProcessor 'org.projectlombok:lombok'
            testAnnotationProcessor 'org.projectlombok:lombok'
        }
    }

}
build.dependsOn assemble

defaultTasks(
        'clean',
        'assemble',
        'build',
        'spotlessApply',
        'javadoc',
        'publishToMavenLocal'
)


